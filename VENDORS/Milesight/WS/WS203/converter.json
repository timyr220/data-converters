
function decodePayload(input) {
    var output = { attributes:{}, telemetry: {} };
    // --- Decoding code --- //

    output.telemetry.HEX_bytes = bytesToHex(input);

    // If the length of the input byte array is odd - we cannot parse it using the example below
    if (input.length > 2) {
        var i = 0;
        while (i < input.length - 2) {
            var channel_id = input[i];
            i++;
            var channel_type = input[i];
            i++;
            // BATTERY
            if (channel_id == 0x01 && channel_type == 0x75) {
                output.telemetry.battery = input[i];
                i++;
            }
            // TEMPERATURE
            else if (channel_id == 0x03 && channel_type == 0x67) {
                output.telemetry.temperature = parseBytesToInt(input, i, 2, false) / 10;
                i += 2;
            }
            // HUMIDITY
            else if (channel_id == 0x04 && channel_type == 0x68) {
                output.telemetry.humidity = input[i] / 2;
                i++;
            }
            // OCCUPANCY
            else if (channel_id == 0x05 && channel_type == 0x00) {
                output.telemetry.occupancy = input[i] == 0 ? "vacant" : "occupied";
                i++;
            }
            // TEMPERATURE WITH ABNORMAL
            else if (channel_id == -125 && channel_type == 0x67) {
                output.telemetry.temperature = parseBytesToInt(input, i, 2, false) / 10;
                output.telemetry.temperature_abnormal = input[i + 2] == 0 ? "normal" : "abnormal";
                i += 3;
            }
            // HISTORICAL DATA
            else if (channel_id == 0x20 && channel_type == -50) {
                var data = {};
                data.put("timestamp", parseBytesToInt(input, i, 4, false));
                var report_type = input[i + 4];
                var report_types = ["temperature resume", "temperature threshold", "pir idle", "pir occupancy", "period"];
                data.put("report_type", report_types[report_type & 0x07]);
                data.put("occupancy", (input[i + 5] == 0) ? "vacant" : "occupied");
                data.put("temperature", parseBytesToInt(input, i + 6, 2, false) / 10.0);
                data.put("humidity", input[i + 8] / 2.0);
                i += 9;
                
                if (output.telemetry.history == null) {
                    output.telemetry.history = [];
                }
                output.telemetry.history.add(data);
            }
        }
    }

    // --- Decoding code --- //
    return output;
}
